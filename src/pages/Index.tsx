import { useState, useEffect, useRef } from 'react';
import Icon from '@/components/ui/icon';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';

export default function Index() {
  const [wishes] = useState<string[]>([
    "–ñ–µ–ª–∞—é —Ç–µ–±–µ —Å–∞–º—ã—Ö —è—Ä–∫–∏—Ö —ç–º–æ—Ü–∏–π, –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Å—á–∞—Å—Ç—å—è –∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –º–µ—á—Ç! ‚ù§Ô∏è",
    "–ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏ –±—É–¥–µ—Ç –Ω–∞–ø–æ–ª–Ω–µ–Ω —Å–æ–ª–Ω–µ—á–Ω—ã–º —Å–≤–µ—Ç–æ–º –∏ —Ç–µ–ø–ª—ã–º–∏ –æ–±—ä—è—Ç–∏—è–º–∏! üåû",
    "–ñ–µ–ª–∞—é —Ç–µ–±–µ –∫—Ä–µ–ø–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è, –∏—Å–∫—Ä–µ–Ω–Ω–µ–π –ª—é–±–≤–∏ –∏ –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω–æ–≥–æ —Å—á–∞—Å—Ç—å—è! üíï",
    "–ü—É—Å—Ç—å –≤—Å–µ —Ç–≤–æ–∏ –º–µ—á—Ç—ã —Å–±—ã–≤–∞—é—Ç—Å—è, –∞ —Å–µ—Ä–¥—Ü–µ –≤—Å–µ–≥–¥–∞ –ø–æ–µ—Ç –æ—Ç —Ä–∞–¥–æ—Å—Ç–∏! üéµ",
    "–ë—É–¥—å –≤—Å–µ–≥–¥–∞ —Ç–∞–∫–æ–π –∂–µ –∫—Ä–∞—Å–∏–≤–æ–π, —É–º–Ω–æ–π –∏ –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º–æ–π! –¢—ã –æ—Å–æ–±–µ–Ω–Ω–∞—è! ‚ú®",
    "–ñ–µ–ª–∞—é —Ç–µ–±–µ –º–æ—Ä—è –ø–æ–∑–∏—Ç–∏–≤–∞, –æ–∫–µ–∞–Ω —É–ª—ã–±–æ–∫ –∏ –≤—Å–µ–ª–µ–Ω–Ω—É—é –ª—é–±–≤–∏! üåä",
    "–ü—É—Å—Ç—å —ç—Ç–æ—Ç –Ω–æ–≤—ã–π –≥–æ–¥ –∂–∏–∑–Ω–∏ –ø—Ä–∏–Ω–µ—Å–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏—è—Ç–Ω—ã–µ —Å—é—Ä–ø—Ä–∏–∑—ã! üéÅ",
    "–û—Å—Ç–∞–≤–∞–π—Å—è –≤—Å–µ–≥–¥–∞ –º–æ–ª–æ–¥–æ–π –¥—É—à–æ–π –∏ –æ—Ç–∫—Ä—ã—Ç—ã–º —Å–µ—Ä–¥—Ü–µ–º! üíù"
  ]);
  const [hearts, setHearts] = useState<{id: number, left: number, delay: number}[]>([]);
  const [currentSlide, setCurrentSlide] = useState(0);
  const [isPlaying, setIsPlaying] = useState(false);
  const [confetti, setConfetti] = useState<{id: number, x: number, y: number, color: string, rotation: number, delay: number}[]>([]);
  const audioRef = useRef<HTMLAudioElement>(null);
  
  useEffect(() => {
    const generateHearts = () => {
      const newHearts = [];
      for (let i = 0; i < 15; i++) {
        newHearts.push({
          id: Date.now() + i,
          left: Math.random() * 100,
          delay: Math.random() * 8
        });
      }
      setHearts(newHearts);
    };
    
    generateHearts();
    const interval = setInterval(generateHearts, 10000);
    return () => clearInterval(interval);
  }, []);

  useEffect(() => {
    const slideInterval = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % memories.length);
    }, 4000);
    
    return () => clearInterval(slideInterval);
  }, []);

  useEffect(() => {
    const timer = setTimeout(() => {
      if (audioRef.current) {
        audioRef.current.play().then(() => {
          setIsPlaying(true);
        }).catch(() => {
          console.log('–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –º—É–∑—ã–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –±—Ä–∞—É–∑–µ—Ä–æ–º');
        });
      }
    }, 1000);
    
    return () => clearTimeout(timer);
  }, []);

  useEffect(() => {
    const generateConfetti = () => {
      const colors = ['#ff6b9d', '#c44569', '#f8b500', '#6a89cc', '#82ccdd', '#b8e994', '#ff9ff3', '#54a0ff'];
      const newConfetti = [];
      
      for (let i = 0; i < 80; i++) {
        newConfetti.push({
          id: Date.now() + i,
          x: Math.random() * 100,
          y: -20,
          color: colors[Math.floor(Math.random() * colors.length)],
          rotation: Math.random() * 360,
          delay: Math.random() * 3
        });
      }
      
      setConfetti(newConfetti);
      
      setTimeout(() => {
        setConfetti([]);
      }, 6000);
    };
    
    const timer = setTimeout(generateConfetti, 500);
    return () => clearTimeout(timer);
  }, []);

  const playMusic = () => {
    if (audioRef.current) {
      if (isPlaying) {
        audioRef.current.pause();
      } else {
        audioRef.current.play();
      }
      setIsPlaying(!isPlaying);
    }
  };

  const memories = [
    {
      url: "https://cdn.poehali.dev/files/eedeaadc-aaa4-450f-9cf6-9f0443585045.jpg",
      caption: "–ù–∞—à–∏ –≤–µ—Å–µ–ª—ã–µ –º–æ–º–µ–Ω—Ç—ã"
    },
    {
      url: "https://cdn.poehali.dev/files/dd86e54b-ac34-4cb9-820a-7910e2ced1a5.jpg", 
      caption: "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π –∑–∞–∫–∞—Ç —É –æ–∑–µ—Ä–∞"
    },
    {
      url: "https://cdn.poehali.dev/files/1779c9be-ad73-4fa0-8c27-d4eecc5692bd.jpg",
      caption: "–í–º–µ—Å—Ç–µ –Ω–∞–≤—Å–µ–≥–¥–∞"
    },
    {
      url: "https://cdn.poehali.dev/files/a9fbdf37-12ec-46ac-9d4e-ac29ee991da8.jpg",
      caption: "–°—á–∞—Å—Ç–ª–∏–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã"
    },
    {
      url: "https://cdn.poehali.dev/files/f86c48f2-4a78-4c83-b683-3b5edbd55bac.jpg",
      caption: "–í –¥–æ—Ä–æ–≥–µ –∂–∏–∑–Ω–∏"
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-pink-50 via-white to-rose-50 relative overflow-hidden">
      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–µ—Ä–¥–µ—á–∫–∏ */}
      <div className="fixed inset-0 pointer-events-none z-10">
        {hearts.map(heart => (
          <div
            key={heart.id}
            className="absolute text-2xl text-rose-400 animate-fall"
            style={{
              left: `${heart.left}%`,
              animationDelay: `${heart.delay}s`,
              top: '-50px'
            }}
          >
            ‚ù§Ô∏è
          </div>
        ))}
      </div>

      {/* –ö–æ–Ω—Ñ–µ—Ç—Ç–∏ */}
      <div className="fixed inset-0 pointer-events-none z-30">
        {confetti.map(piece => (
          <div
            key={piece.id}
            className="absolute w-3 h-3 animate-fall"
            style={{
              left: `${piece.x}%`,
              backgroundColor: piece.color,
              animationDelay: `${piece.delay}s`,
              animationDuration: '4s',
              transform: `rotate(${piece.rotation}deg)`,
              top: '-50px'
            }}
          />
        ))}
      </div>

      {/* –ü–ª–∞–≤–∞—é—â–∏–µ –ª–µ–ø–µ—Å—Ç–∫–∏ */}
      <div className="fixed top-10 left-10 text-pink-300 text-xl animate-float">üå∏</div>
      <div className="fixed top-20 right-20 text-rose-300 text-lg animate-float-slow">üåπ</div>
      <div className="fixed bottom-20 left-20 text-pink-400 text-xl animate-float">üå∫</div>
      <div className="fixed bottom-32 right-32 text-rose-200 text-lg animate-float-slow">üå∑</div>

      {/* –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="relative z-20">
        {/* –ì–µ—Ä–æ–π —Å–µ–∫—Ü–∏—è */}
        <section className="min-h-screen flex items-center justify-center px-4">
          <div className="text-center max-w-4xl mx-auto animate-fade-in">
            <div className="mb-8">
              <img 
                src="/img/594c4a07-b451-4bd8-b468-f5037a03e132.jpg" 
                alt="Roses" 
                className="w-32 h-32 mx-auto rounded-full object-cover border-4 border-rose-300 shadow-xl animate-scale-in"
              />
            </div>
            
            <h1 className="text-6xl md:text-8xl font-bold bg-gradient-to-r from-rose-500 via-pink-500 to-rose-400 bg-clip-text text-transparent mb-6">
              –° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è!
            </h1>
            
            <p className="text-2xl md:text-3xl text-gray-700 mb-8 font-light">
              –ú–æ—è –¥–æ—Ä–æ–≥–∞—è, —Å–µ–≥–æ–¥–Ω—è —Ç–≤–æ–π –æ—Å–æ–±–µ–Ω–Ω—ã–π –¥–µ–Ω—å! ‚ú®
            </p>
            
            <div className="flex justify-center space-x-4 text-4xl animate-bounce">
              <span className="animate-float">üíï</span>
              <span className="animate-float-slow">üéÇ</span>
              <span className="animate-float">üéâ</span>
              <span className="animate-float-slow">üåπ</span>
              <span className="animate-float">üíñ</span>
            </div>
          </div>
        </section>

        {/* –°–ª–∞–π–¥—à–æ—É –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π */}
        <section className="py-20 px-4 bg-white/80 backdrop-blur-sm">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold text-center text-rose-600 mb-16">
              üí´ –ù–∞—à–∏ –í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è üí´
            </h2>
            
            <div className="relative max-w-4xl mx-auto">
              {/* –ì–ª–∞–≤–Ω–æ–µ —Å–ª–∞–π–¥—à–æ—É */}
              <div className="relative h-96 md:h-[500px] rounded-2xl overflow-hidden shadow-2xl">
                {memories.map((memory, index) => (
                  <div
                    key={index}
                    className={`absolute inset-0 transition-opacity duration-1000 ${
                      index === currentSlide ? 'opacity-100' : 'opacity-0'
                    }`}
                  >
                    <img
                      src={memory.url}
                      alt={memory.caption}
                      className="w-full h-full object-cover"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent" />
                    <div className="absolute bottom-6 left-6 right-6 text-white">
                      <h3 className="text-2xl font-bold mb-2">{memory.caption}</h3>
                      <div className="flex items-center space-x-2">
                        <span className="text-rose-300">üíù</span>
                        <span className="text-lg opacity-90">–î—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç</span>
                      </div>
                    </div>
                  </div>
                ))}
                
                {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
                <button
                  onClick={() => setCurrentSlide(currentSlide === 0 ? memories.length - 1 : currentSlide - 1)}
                  className="absolute left-4 top-1/2 -translate-y-1/2 bg-white/20 backdrop-blur-sm text-white p-3 rounded-full hover:bg-white/30 transition-all duration-300"
                >
                  <Icon name="ChevronLeft" size={24} />
                </button>
                <button
                  onClick={() => setCurrentSlide((currentSlide + 1) % memories.length)}
                  className="absolute right-4 top-1/2 -translate-y-1/2 bg-white/20 backdrop-blur-sm text-white p-3 rounded-full hover:bg-white/30 transition-all duration-300"
                >
                  <Icon name="ChevronRight" size={24} />
                </button>
              </div>
              
              {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */}
              <div className="flex justify-center space-x-3 mt-6">
                {memories.map((_, index) => (
                  <button
                    key={index}
                    onClick={() => setCurrentSlide(index)}
                    className={`w-3 h-3 rounded-full transition-all duration-300 ${
                      index === currentSlide
                        ? 'bg-rose-500 scale-125'
                        : 'bg-rose-300 hover:bg-rose-400'
                    }`}
                  />
                ))}
              </div>
              
              {/* –ú–∏–Ω–∏–∞—Ç—é—Ä—ã */}
              <div className="grid grid-cols-5 gap-3 mt-8">
                {memories.map((memory, index) => (
                  <button
                    key={index}
                    onClick={() => setCurrentSlide(index)}
                    className={`relative h-20 rounded-lg overflow-hidden transition-all duration-300 ${
                      index === currentSlide
                        ? 'ring-4 ring-rose-400 scale-105'
                        : 'hover:scale-105 opacity-70 hover:opacity-100'
                    }`}
                  >
                    <img
                      src={memory.url}
                      alt={memory.caption}
                      className="w-full h-full object-cover"
                    />
                  </button>
                ))}
              </div>
            </div>
          </div>
        </section>

        {/* –ü–æ–∂–µ–ª–∞–Ω–∏—è */}
        <section className="py-20 px-4 bg-gradient-to-r from-rose-50 to-pink-50">
          <div className="max-w-4xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold text-center text-rose-600 mb-16">
              üíå –ü–æ–∂–µ–ª–∞–Ω–∏—è –¥–ª—è –¢–µ–±—è üíå
            </h2>
            
            {/* –°–ø–∏—Å–æ–∫ –ø–æ–∂–µ–ª–∞–Ω–∏–π */}
            <div className="space-y-6">
              {wishes.map((wish, index) => (
                <Card key={index} className="p-6 border-rose-200 bg-white/90 backdrop-blur-sm hover:shadow-lg transition-all duration-300 animate-fade-in" style={{ animationDelay: `${index * 0.1}s` }}>
                  <CardContent className="p-0">
                    <div className="flex items-start space-x-4">
                      <div className="text-2xl">üíù</div>
                      <div className="flex-1">
                        <p className="text-gray-700 text-lg leading-relaxed italic">"{wish}"</p>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          </div>
        </section>

        {/* –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–µ–∫—Ü–∏—è */}
        <section className="py-20 px-4 bg-gradient-to-br from-rose-100 to-pink-100 text-center">
          <div className="max-w-3xl mx-auto animate-fade-in">
            <h2 className="text-4xl md:text-5xl font-bold text-rose-600 mb-8">
              üåü –¢—ã ‚Äî –ú–æ–µ –í—Å–µ! üåü
            </h2>
            <p className="text-xl text-gray-700 leading-relaxed mb-8">
              –ü—É—Å—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å –ø—Ä–∏–Ω–µ—Å–µ—Ç —Ç–µ–±–µ —Å—Ç–æ–ª—å–∫–æ —Ä–∞–¥–æ—Å—Ç–∏, —Å–∫–æ–ª—å–∫–æ —Ç—ã –ø—Ä–∏–Ω–æ—Å–∏—à—å –≤ –º–æ—é –∂–∏–∑–Ω—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. 
              –¢—ã –¥–µ–ª–∞–µ—à—å –º–∏—Ä —è—Ä—á–µ —Å–≤–æ–µ–π —É–ª—ã–±–∫–æ–π –∏ —Ç–µ–ø–ª–µ–µ —Å–≤–æ–∏–º —Å–µ—Ä–¥—Ü–µ–º.
            </p>
            <div className="text-6xl animate-pulse mb-8">
              üíñ‚ú®üéÇ‚ú®üíñ
            </div>
            
            {/* –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä */}
            {isPlaying && (
              <div className="mt-8 flex items-center justify-center space-x-4 text-rose-600">
                <Icon name="Music" className="animate-pulse" size={24} />
                <span className="text-lg">‚ô™ –° –î–Ω–µ–º –†–æ–∂–¥–µ–Ω–∏—è! ‚ô™</span>
                <Button
                  onClick={playMusic}
                  variant="outline"
                  className="border-rose-300 text-rose-600 hover:bg-rose-50"
                >
                  <Icon name="Pause" className="mr-2" size={16} />
                  –ü–∞—É–∑–∞
                </Button>
              </div>
            )}
            
            {/* –°–∫—Ä—ã—Ç—ã–π –∞—É–¥–∏–æ–ø–ª–µ–µ—Ä */}
            <audio
              ref={audioRef}
              loop
              preload="auto"
              className="hidden"
            >
              <source src="https://cdn.freesound.org/previews/414/414209_5063937-lq.mp3" type="audio/mpeg" />
              <source src="https://www.soundjay.com/misc/sounds/bell-ringing-05.wav" type="audio/wav" />
            </audio>
          </div>
        </section>
      </div>
    </div>
  );
}